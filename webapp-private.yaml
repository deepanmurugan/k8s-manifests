---
apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: production
  name: webapp-private
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: webapp-private
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webapp-private
    spec:
      initContainers:
      - image: busybox
        name: busybox-container
        command: ['sh', '-c', 'mkdir -p /usr/share/nginx/html; echo "This is a private service 1" > /usr/share/nginx/html/index.html']
        volumeMounts:
          - name: data
            mountPath: /usr/share/nginx/html
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        livenessProbe:
          httpGet:
            path: /index.html
            port: 80
          initialDelaySeconds: 90
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /index.html
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 10
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: data
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: production
  name: webapp-private-service
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
  selector:
    app.kubernetes.io/name: webapp-private
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: production
  name: webapp-private-serviceb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: webapp-private-serviceb
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webapp-private-serviceb
    spec:
      initContainers:
      - image: busybox
        name: busybox-container
        command: ['sh', '-c', 'mkdir -p /usr/share/nginx/html; echo "This is a private service 1" > /usr/share/nginx/html/index.html']
        volumeMounts:
          - name: data
            mountPath: /usr/share/nginx/html
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        livenessProbe:
          httpGet:
            path: /index.html
            port: 80
          initialDelaySeconds: 90
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /index.html
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 10
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: data
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: production
  name: webapp-private-serviceb
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
  selector:
    app.kubernetes.io/name: webapp-private-serviceb
---
apiVersion: extensions/v1beta1 
kind: Ingress
metadata:
  namespace: production
  name: webapp-private-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /servicea
            backend:
              serviceName: webapp-private-service
              servicePort: 80
          - path: /serviceb
            backend:
              serviceName: webapp-private-serviceb
              servicePort: 80
